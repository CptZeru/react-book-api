{"version":3,"sources":["logo.svg","components/Modal/Modal.js","components/forms/addForm.js","components/leftContent/leftContent.js","components/bookDetail/index.js","components/rightContent/rightContent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Modal","onClose","e","props","this","show","class","id","title","children","onClick","React","Component","addForm","state","category","description","handleChange","setState","target","name","value","handleSubmit","data","console","log","axios","post","then","res","for","type","placeholder","onChange","LeftContent","content","showModal","formAdd","className","detailBook","key","RightContent","book","books","targetId","showDetail","get","preventDefault","href","map","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9abfc994.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport './ModalStyles.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Modal extends React.Component {\r\n  onClose = e => {\r\n    this.props.onClose && this.props.onClose(e);\r\n  };\r\n  render() {\r\n    if(!this.props.show){\r\n        return null;\r\n    }\r\n    return (\r\n      <div class=\"modal\" id=\"modal\">\r\n        <h2>{this.props.title}</h2>\r\n        <div class=\"content\">{this.props.children}</div>\r\n        <div class=\"actions\">\r\n          <button class=\"toggle-button\" onClick={this.onClose}>\r\n            close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  show: PropTypes.bool.isRequired\r\n};\r\nexport default Modal;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class addForm extends React.Component{\r\n    state = {\r\n        title: \"\",\r\n        category:\"\",\r\n        description:\"\"\r\n    }\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.name]: [e.target.value]\r\n        })\r\n    }\r\n    handleSubmit = e => {\r\n        // e.preventDefault();\r\n        const data = {\r\n            title: this.state.title[0],\r\n            category: this.state.category[0],\r\n            description: this.state.description[0]\r\n        }\r\n        console.log(data);\r\n        axios.post(`https://fullstack-book.ariefdfaltah.com/book/create?key=gandhi`,  data )\r\n            .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n      })\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                {/* <form> */}\r\n                    <label for=\"bookTitle\">Book Title</label><br/>\r\n                    <input type=\"text\" name=\"title\" id=\"bookTitle\" placeholder=\"Enter Book Title\" onChange={this.handleChange}/><br/>\r\n                    <label for=\"bookCategory\">Book Category</label><br/>\r\n                    <input type=\"text\" name=\"category\" id=\"bookCategory\" placeholder=\"Enter Book Category\" onChange={this.handleChange}/><br/>\r\n                    <label for=\"bookDesc\">Book Description</label><br/>\r\n                    <textarea type=\"text\" name=\"description\" id=\"bookDesc\" placeholder=\"Enter Book Description\" onChange={this.handleChange}></textarea><br/>\r\n                    <button id=\"bookAddbtn\" type=\"submit\" onClick={this.handleSubmit}>Add Book</button>\r\n                {/* </form> */}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './leftContent-styles.css';\r\nimport Modal from '../Modal/Modal';\r\nimport AddForm from '../forms/addForm'\r\n\r\nclass LeftContent extends React.Component {\r\n    state = {\r\n        show: false,\r\n        title: \"\",\r\n        content: <div></div>\r\n      };\r\n      showModal = e => {\r\n        this.setState({\r\n          show: !this.state.show\r\n        });\r\n      };\r\n      formAdd = e => {\r\n        this.setState({\r\n          title: \"Add new Book\",\r\n          content: <AddForm/>\r\n        });\r\n      };\r\n      \r\n    render(){\r\n        return(\r\n            <div className=\"split left\">\r\n                <div className=\"page-title\">\r\n                    <h1 id=\"left-title\">Recommended Books <br/> Reading</h1>\r\n                </div>\r\n                <div className=\"centered\">\r\n                    <button className=\"add-btn circle-box toggle-button\" id=\"centered-toggle-button\" type=\"button\" onClick={e => {\r\n                        this.showModal(); this.formAdd();\r\n                        }}>Tambah</button>\r\n                    <Modal onClose={this.showModal} show={this.state.show} title={this.state.title}>\r\n                        {this.state.content}\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LeftContent;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class detailBook extends React.Component{\r\n    render(){\r\n        return(\r\n            // <div>\r\n                <div key={this.props.id}>\r\n                    <h1>{this.props.title}</h1>\r\n                    <h4>{this.props.category}</h4>\r\n                    <p>{this.props.description}</p>\r\n                </div>\r\n            // {/* </div> */}\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport './rightContent-styles.css';\r\nimport Modal from '../Modal/Modal';\r\nimport DetailBook from '../bookDetail/index';\r\n// import { fetchBookList } from '../Action/action'\r\n\r\nclass RightContent extends React.Component {\r\n    state = {\r\n        book:[],\r\n        books: [],\r\n        targetId: 0,\r\n        show: false,\r\n        title: \"\",\r\n        content: <div></div>\r\n    }\r\n    showModal = e => {\r\n        this.setState({\r\n          show: !this.state.show\r\n        });\r\n      };\r\n    showDetail = e => {\r\n        axios.get(`https://fullstack-book.ariefdfaltah.com/book/detail/${e.target.name}?key=gandhi`)\r\n        .then(res => {\r\n            const book = res.data.data;\r\n            this.setState({ book });\r\n          })\r\n        this.setState({\r\n            title: \"Book Detail\",\r\n            content: <DetailBook id={this.state.book.id} title={this.state.book.title} category={this.state.book.category} description={this.state.book.description}/>            \r\n        })\r\n        this.showModal();\r\n    }\r\n    componentDidMount(){\r\n        // this.props.fetchBookList();\r\n        axios.get(\"https://fullstack-book.ariefdfaltah.com/book/list?key=gandhi&sort_by=category&sort_order=desc\")\r\n        .then(res => {\r\n            const books = res.data.data;\r\n            this.setState({ books });\r\n          })        \r\n    }\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(e.target.name);\r\n        axios.get(`https://fullstack-book.ariefdfaltah.com/book/delete/${e.target.name}?key=gandhi`)\r\n          .then(res => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n          })\r\n      }\r\n    render(){\r\n        // console.log(this.props.data);\r\n        return(\r\n            <div className=\"split right\">\r\n                <Modal onClose={this.showModal} show={this.state.show} title={this.state.title}>\r\n                        {this.state.content}\r\n                </Modal>\r\n                <table>\r\n                    <tr id=\"booklist-header\">\r\n                        <th></th>\r\n                        <th>\r\n                            <h1>Book List</h1>\r\n                        </th>\r\n                        <th></th>\r\n                        <th>\r\n                            <a className=\"sort-btn\" href=\"\"><h1 className=\"text-right\">SORT <i className=\"fa fa-sort\"></i></h1></a>\r\n                        </th>\r\n                    </tr>\r\n                    <tbody>\r\n                        {this.state.books.map(book => \r\n                            <tr>\r\n                                <td><h3>{book.id}</h3></td>\r\n                                <td><h3>{book.title}</h3></td>\r\n                                <td><h3>{book.category}</h3></td>\r\n                                <td><h3><a href=\"#\" name={book.id} onClick={\r\n                                this.showDetail\r\n                                }>Detail</a> | <a href=\"#\" name={book.id} onClick={this.handleSubmit}>Delete</a></h3></td>\r\n                            </tr>\r\n                        )}\r\n                        {/* {data.map(book => \r\n                            <tr key={book.id}>\r\n                                <td><h3>{book.id}</h3></td>\r\n                                <td><h3>{book.title}</h3></td>\r\n                                <td><h3>{book.category}</h3></td>\r\n                                <td><h3>a</h3></td>\r\n                            </tr>\r\n                        )} */}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RightContent;","import React from 'react';\nimport logo from './logo.svg';\nimport LeftContent from './components/leftContent/leftContent';\nimport RightContent from './components/rightContent/rightContent';\n// import './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <LeftContent/>\n      <RightContent/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}